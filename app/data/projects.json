[
    {
    "name": "Structural Analysis and Logistics Toolkit",
    "year": 2021,
    "difficulty": "Beginner",
    "fields": ["Engineering Computation"],
    "frameworks": [],
    "libraries": [],
    "languages": ["MATLAB"],
    "description": "This project contains a set of MATLAB scripts designed to solve real-world engineering problems involving structural mechanics and operational logistics.",
    "link": "",
    "course": "EECS 101"
    },
    {
      "name": "Tumor Detection and Visualization in Medical Imaging",
      "year": 2021,
      "difficulty": "Intermediate",
      "fields": ["Image Processing"],
      "frameworks": [],
      "libraries": [],
      "languages": ["MATLAB"],
      "description": "A MATLAB-based system for detecting tumors in medical images, applying noise reduction, and visualizing results using heatmaps and a watch-style interface.",
      "course": "EECS 101"
    },
    {
      "name": "Wind Farm Performance Analysis and Visualization",
      "year": 2021,
      "difficulty": "Intermediate",
      "fields": ["Data Analysis"],
      "frameworks": [],
      "libraries": [],
      "languages": ["MATLAB"],
      "description": "A MATLAB-based tool for analyzing wind farm data and visualizing energy performance metrics using custom plotting routines.",
      "course": "EECS 101"
    },
    {
      "name": "Optimal Braking Coefficient Calculator",
      "year": 2021,
      "difficulty": "Intermediate",
      "fields": ["Physics Simulation"],
      "frameworks": [],
      "libraries": [],
      "languages": ["C++"],
      "description": "A C++ program that calculates the optimal braking coefficient to stop an object within a given distance using binary search and Euler's method to simulate deceleration.",
      "course": "EECS 101"
    },
    {
      "name": "Review Trustworthiness Evaluator",
      "year": 2021,
      "difficulty": "Beginner",
      "fields": ["Data Analysis"],
      "frameworks": [],
      "libraries": [],
      "languages": ["C++"],
      "description": "A C++ project that evaluates the trustworthiness of reviews based on score thresholds, using file I/O and conditional logic.",
      "course": "EECS 101"
    },
    {
      "name": "Planetary Route Planning Based on Coordinate and ID Mapping",
      "year": 2021,
      "difficulty": "Beginner",
      "fields": ["Coordinate Mapping"],
      "frameworks": [],
      "libraries": [],
      "languages": ["C++"],
      "description": "A C++ program that reads planetary location and name data from input files, maps them using structs and vectors, and supports grid-based route planning across planetary coordinates.",
      "course": "EECS 101"
    },
    {
      "name": "Column-Based Statistical Summary Tool",
      "year": 2022,
      "difficulty": "Beginner",
      "fields": ["Data Analysis"],
      "frameworks": [],
      "libraries": [],
      "languages": ["C++"],
      "description": "A C++ program that reads a CSV file, extracts a numeric column by name, and generates a frequency-based statistical summary of its values.",
      "course": "EECS 280"
    },
    {
      "name": "Modular Image Processing Toolkit",
      "year": 2022,
      "difficulty": "Intermediate",
      "fields": ["Image Processing"],
      "frameworks": [],
      "libraries": [],
      "languages": ["C++"],
      "description": "A C++ project that implements an image processing toolkit using custom data structures and modular functions for resizing, rotating, and processing images, with accompanying unit tests.",
      "course": "EECS 280"
    },
    {
      "name": "Euchre",
      "year": 2022,
      "difficulty": "Intermediate",
      "fields": ["Game Development"],
      "frameworks": [],
      "libraries": [],
      "languages": ["C++"],
      "description": "A modular C++ implementation of the classic card game Euchre, including classes for players, cards, and game logic, as well as configurable game settings and unit tests.",
      "course": "EECS 280"
    },
    {
      "name": "Generic Doubly-Linked List with Iterator Interface",
      "year": 2022,
      "difficulty": "Intermediate",
      "fields": ["Data Structures"],
      "frameworks": [],
      "libraries": [],
      "languages": ["C++"],
      "description": "A templated C++ implementation of a doubly-linked, double-ended list with iterator support, featuring standard list operations and a full test suite.",
      "course": "EECS 280"
    },
    {
      "name": "Naive Text Classifier Using Word Frequency and Logistic Modeling",
      "year": 2022,
      "difficulty": "Intermediate",
      "fields": ["Machine Learning"],
      "frameworks": [],
      "libraries": [],
      "languages": ["C++"],
      "description": "A C++ project that trains and evaluates a simple text classifier using word frequency and label probability, modeled after a Naive Bayes approach, with support for CSV input and debug inspection.",
      "course": "EECS 280"
    },
    {
      "name": "LC-2K Assembler and Simulator",
      "year": 2023,
      "difficulty": "Intermediate",
      "fields": ["Computer Architecture"],
      "frameworks": [],
      "libraries": [],
      "languages": ["C"],
      "description": "A C project that assembles and simulates programs written in the LC-2K instruction set architecture, translating assembly code to machine code and running it on a simulated processor.",
      "course": "EECS 370"
    },
    {
      "name": "LC-2K Assembler and Linker",
      "year": 2023,
      "difficulty": "Intermediate",
      "fields": ["Computer Architecture"],
      "frameworks": [],
      "libraries": [],
      "languages": ["C"],
      "description": "A two-pass assembler and linker for the LC-2K instruction set written in C, capable of translating assembly code into machine code and resolving external symbols across multiple modules.",
      "course": "EECS 370"
    },
    {
      "name": "LC-2K 5-Stage Pipeline Simulator",
      "year": 2023,
      "difficulty": "Intermediate",
      "fields": ["Computer Architecture"],
      "frameworks": [],
      "libraries": [],
      "languages": ["C"],
      "description": "A C-based pipeline simulator for the LC-2K instruction set, implementing a 5-stage pipeline with instruction decoding, data forwarding, and cycle-by-cycle execution tracking.",
      "course": "EECS 370"
    },
    {
      "name": "LC-2K Cache Simulator",
      "year": 2023,
      "difficulty": "Intermediate",
      "fields": ["Computer Architecture"],
      "frameworks": [],
      "libraries": [],
      "languages": ["C"],
      "description": "A configurable cache simulator for the LC-2K architecture written in C, modeling cache read/write behavior with support for LRU replacement and memory access tracking.",
      "course": "EECS 370"
    },
    {
      "name": "Movie Recommendation Analytics",
      "year": 2025,
      "difficulty": "Intermediate",
      "fields": ["Data Mining", "Recommendation Systems"],
      "frameworks": ["Apache Spark"],
      "libraries": ["PySpark"],
      "languages": ["Python"],
      "description": "A Spark-based Python project that analyzes movie ratings and transaction data to extract frequent itemsets, association rules, and popularity metrics for recommendation purposes.",
      "course": "EECS 476"
    },
    {
      "name": "Document Similarity and Clustering Toolkit",
      "year": 2025,
      "difficulty": "Intermediate",
      "fields": ["Data Mining"],
      "frameworks": [],
      "libraries": ["NumPy"],
      "languages": ["Python"],
      "description": "A Python toolkit for document clustering and similarity analysis using k-means, LSH, cosine similarity, shingling, and LOF for outlier detection.",
      "course": "EECS 476"
    },
    {
      "name": "Lightweight Quantum Circuit Simulator",
      "year": 2025,
      "difficulty": "Intermediate",
      "fields": ["Quantum Computing"],
      "frameworks": [],
      "libraries": ["NumPy"],
      "languages": ["Python"],
      "description": "A basic quantum circuit simulator built in Python using NumPy, supporting multiple qubits, standard quantum gates, and probabilistic measurement of quantum states.",
      "course": "EECS 479"
    },
    {
      "name": "Grover's Algorithm Simulation",
      "year": 2025,
      "difficulty": "Intermediate",
      "fields": ["Quantum Computing"],
      "frameworks": ["Qiskit"],
      "libraries": ["Qiskit"],
      "languages": ["Python"],
      "description": "A Python-based simulation of Grover’s quantum search algorithm using Qiskit, with logic for CNF-based oracle generation and modular testing of circuit components.",
      "course": "EECS 479"
    },
    {
      "name": "Steane [[7,1,3]] Quantum Error Correction Code",
      "year": 2025,
      "difficulty": "Intermediate",
      "fields": ["Quantum Computing"],
      "frameworks": ["Qiskit"],
      "libraries": ["Qiskit", "NumPy"],
      "languages": ["Python"],
      "description": "A Qiskit-based implementation of the Steane [[7,1,3]] quantum error-correcting code with encoding, syndrome measurement, error correction, and validation.",
      "course": "EECS 479"
    },
    {
      "name": "Insta485 Static Site Generator",
      "year": 2024,
      "difficulty": "Intermediate",
      "fields": ["Web Development"],
      "frameworks": [],
      "libraries": ["Jinja2", "Click"],
      "languages": ["Python", "HTML", "CSS"],
      "description": "A Python-based static site generator for an Instagram-style photo-sharing site using Jinja2 templates and JSON configuration.",
      "course": "EECS 485"
    },
    {
      "name": "Insta485 Server-Side Dynamic Photo Sharing Web App",
      "year": 2024,
      "difficulty": "Intermediate",
      "fields": ["Web Development"],
      "frameworks": [],
      "libraries": ["Flask", "Jinja2", "SQLite3"],
      "languages": ["Python", "HTML", "CSS", "SQL"],
      "description": "A server-side web application that mimics Instagram functionality, using Python views, Jinja templating, and SQLite to render dynamic user pages, posts, and interactions.",
      "course": "EECS 485"
    },
    {
      "name": "Insta485 Client-Side Dynamic Photo App",
      "year": 2024,
      "difficulty": "Intermediate",
      "fields": ["Web Development"],
      "frameworks": ["React"],
      "libraries": ["Flask", "React", "Webpack", "Babel"],
      "languages": ["JavaScript", "JSX", "HTML", "CSS", "SQL", "Python"],
      "description": "A React-based frontend for a photo-sharing app that dynamically renders content from a RESTful API backed by a SQL database, combining modern UI design with persistent backend data.",
      "course": "EECS 485"
    },
    {
      "name": "Distributed MapReduce Framework",
      "year": 2024,
      "difficulty": "Advanced",
      "fields": ["Distributed Systems", "Data Processing"],
      "frameworks": [],
      "libraries": ["Click", "Socket", "JSON", "threading"],
      "languages": ["Python"],
      "description": "A full Python implementation of a distributed MapReduce system with socket-based job coordination, configurable job submission, and parallel worker execution.",
      "course": "EECS 485"
    },
    {
      "name": "Distributed MapReduce Search Engine",
      "year": 2024,
      "difficulty": "Advanced",
      "fields": ["Distributed Systems", "Information Retrieval"],
      "frameworks": ["Flask"],
      "libraries": ["Flask", "threading", "requests"],
      "languages": ["Python", "HTML"],
      "description": "A Python-based distributed search engine that uses MapReduce for HTML indexing and a Flask frontend to perform multi-threaded, segment-based query resolution.",
      "course": "EECS 485"
    },
    {
      "name": "Cryptographic Attack Suite",
      "year": 2024,
      "difficulty": "Advanced",
      "fields": ["Cybersecurity", "Cryptography"],
      "frameworks": [],
      "libraries": ["hashlib", "sys"],
      "languages": ["Python"],
      "description": "A Python suite demonstrating real-world cryptographic attacks including Bleichenbacher's RSA forgery, CBC padding oracle attacks, and SHA-256 length extension, intended for educational use.",
      "course": "EECS 388"
    },
    {
    "name": "Flawed Ballot Randomization Analysis",
    "year": 2024,
    "difficulty": "Advanced",
    "fields": ["Election Security", "Cryptography"],
    "frameworks": [],
    "libraries": ["json", "zipfile", "itertools"],
    "languages": ["Python"],
    "description": "A Python project that solves a multi-part assignment on reverse-engineering LCGs, auditing ballot-level election data, and unshuffling improperly sanitized CVRs to expose election system vulnerabilities.",
    "course": "EECS 498.8"
  },
  {
    "name": "Exploiting Common Web Vulnerabilities",
    "year": 2024,
    "difficulty": "Intermediate",
    "fields": ["Web Security", "Cybersecurity"],
    "frameworks": [],
    "libraries": [],
    "languages": ["HTML", "JavaScript", "SQL"],
    "description": "A hands-on web security lab demonstrating Cross-Site Request Forgery, SQL Injection, and Cross-Site Scripting attacks, designed for EECS 388 coursework.",
    "course": "EECS 388"
  },
  {
    "name": "Certificate Forgery and Multi-Factor Authentication Bypass",
    "year": 2024,
    "difficulty": "Advanced",
    "fields": ["Cybersecurity", "Cryptography"],
    "frameworks": [],
    "libraries": ["cryptography", "ssl", "pyotp", "requests"],
    "languages": ["Python"],
    "description": "A Python-based project simulating client certificate spoofing and TOTP-based MFA bypasses in a secure certificate exchange system, developed for EECS 388 coursework.",
    "course": "EECS 388"
  },
  {
    "name": "Buffer Overflow Exploitation and Shellcode Injection",
    "year": 2024,
    "difficulty": "Advanced",
    "fields": ["Cybersecurity", "Memory Safety"],
    "frameworks": [],
    "libraries": [],
    "languages": ["C", "Python"],
    "description": "A security lab for exploiting stack-based buffer overflows and shellcode vulnerabilities in C programs, supported by Python exploit scripts. Designed for EECS 388 coursework.",
    "course": "EECS 388"
  },
  {
    "name": "Roomerines",
    "year": 2024,
    "difficulty": "Advanced",
    "fields": ["Mobile App Development"],
    "frameworks": ["React Native", "Expo", "Firebase"],
    "libraries": [
      "expo",
      "react-native",
      "firebase"
    ],
    "languages": ["JavaScript", "TypeScript"],
    "description": "A social media app built with React Native and Firebase that helps students find housing and compatible roommates by creating profiles and connecting based on shared interests. The app uses Firebase email link authentication and cloud services, and is designed for EECS 441 coursework.",
    "course": "EECS 441"
  },
  {
    "name": "Rowing Machine Display Interface for NASA xHAB Rower System",
    "year": 2024,
    "difficulty": "Intermediate",
    "fields": ["Embedded Systems", "UI Design"],
    "frameworks": [],
    "libraries": ["UTFT", "Wire", "SPI"],
    "languages": ["C++", "Arduino"],
    "description": "An Arduino-based touchscreen UI for a mars rowing machine, designed to show reps and weight metrics to astronauts in a mars base environment. Inspired by a NASA xHAB Challenge and completed as part of UofM's BLiSS project team, the display uses a 7” capacitive TFT panel and real-time telemetry from the rower."
  },
  {
    "name": "RacknStack",
    "year": 2025,
    "difficulty": "Advanced",
    "fields": [
      "IoT",
      "Embedded Systems"
    ],
    "frameworks": ["React", "Raspberry Pi"],
    "libraries": ["serial", "threading"],
    "languages": ["JavaScript", "Python"],
    "description": "A full-stack control and telemetry system developed for NASA's X-Hab project to support the redesign of ISS EXPRESS racks for lunar habitats. Combines a React frontend with a Raspberry Pi backend that streams MJPEG video, receives telemetry from Pi Picos over UART, and controls rack components via GPIO relay.",
    "image": "/project_covers/racknstack_cover.png",
    "featured": true
  },
  {
    "name": "Smart Grocery & Meal Planner App",
    "year": 2023,
    "difficulty": "Intermediate",
    "fields": ["Mobile App Development"],
    "frameworks": ["React Native"],
    "libraries": ["React Navigation", "Context API"],
    "languages": ["JavaScript"],
    "description": "A React Native app for managing groceries, finding recipes, and tracking user statistics. Includes multi-screen navigation, state sharing with Context API, and a mobile-friendly interface.",
    "course": "ENTR 390"
  },
  {
    "name": "This Website!",
    "year": 2025,
    "difficulty": "Advanced",
    "fields": ["Web Development"],
    "frameworks": ["Next.js, AWS"],
    "libraries": ["Next, React, Prisma"],
    "languages": ["TypeScript"],
    "description": "A React Native app for managing groceries, finding recipes, and tracking user statistics. Includes multi-screen navigation, state sharing with Context API, and a mobile-friendly interface.",
    "featured": true
  }


]